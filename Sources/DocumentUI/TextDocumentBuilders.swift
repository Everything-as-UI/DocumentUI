///
///  Generated by GYB.
///

import Foundation

extension TextDocumentBuilder {
    public static func buildBlock<C0, C1>(
    _ c0: C0, _ c1: C1
    ) -> TupleDocument<(C0, C1)> where C0: TextDocument, C1: TextDocument {
        TupleDocument {
            var c0i = C0.DocumentInterpolation(c0); let c0r = c0i.build()
            var c1i = C1.DocumentInterpolation(c1); let c1r = c1i.build()
            return [c0r, c1r]
        }
    }
    public static func buildBlock<C0, C1, C2>(
    _ c0: C0, _ c1: C1, _ c2: C2
    ) -> TupleDocument<(C0, C1, C2)> where C0: TextDocument, C1: TextDocument, C2: TextDocument {
        TupleDocument {
            var c0i = C0.DocumentInterpolation(c0); let c0r = c0i.build()
            var c1i = C1.DocumentInterpolation(c1); let c1r = c1i.build()
            var c2i = C2.DocumentInterpolation(c2); let c2r = c2i.build()
            return [c0r, c1r, c2r]
        }
    }
    public static func buildBlock<C0, C1, C2, C3>(
    _ c0: C0, _ c1: C1, _ c2: C2, _ c3: C3
    ) -> TupleDocument<(C0, C1, C2, C3)> where C0: TextDocument, C1: TextDocument, C2: TextDocument, C3: TextDocument {
        TupleDocument {
            var c0i = C0.DocumentInterpolation(c0); let c0r = c0i.build()
            var c1i = C1.DocumentInterpolation(c1); let c1r = c1i.build()
            var c2i = C2.DocumentInterpolation(c2); let c2r = c2i.build()
            var c3i = C3.DocumentInterpolation(c3); let c3r = c3i.build()
            return [c0r, c1r, c2r, c3r]
        }
    }
    public static func buildBlock<C0, C1, C2, C3, C4>(
    _ c0: C0, _ c1: C1, _ c2: C2, _ c3: C3, _ c4: C4
    ) -> TupleDocument<(C0, C1, C2, C3, C4)> where C0: TextDocument, C1: TextDocument, C2: TextDocument, C3: TextDocument, C4: TextDocument {
        TupleDocument {
            var c0i = C0.DocumentInterpolation(c0); let c0r = c0i.build()
            var c1i = C1.DocumentInterpolation(c1); let c1r = c1i.build()
            var c2i = C2.DocumentInterpolation(c2); let c2r = c2i.build()
            var c3i = C3.DocumentInterpolation(c3); let c3r = c3i.build()
            var c4i = C4.DocumentInterpolation(c4); let c4r = c4i.build()
            return [c0r, c1r, c2r, c3r, c4r]
        }
    }
    public static func buildBlock<C0, C1, C2, C3, C4, C5>(
    _ c0: C0, _ c1: C1, _ c2: C2, _ c3: C3, _ c4: C4, _ c5: C5
    ) -> TupleDocument<(C0, C1, C2, C3, C4, C5)> where C0: TextDocument, C1: TextDocument, C2: TextDocument, C3: TextDocument, C4: TextDocument, C5: TextDocument {
        TupleDocument {
            var c0i = C0.DocumentInterpolation(c0); let c0r = c0i.build()
            var c1i = C1.DocumentInterpolation(c1); let c1r = c1i.build()
            var c2i = C2.DocumentInterpolation(c2); let c2r = c2i.build()
            var c3i = C3.DocumentInterpolation(c3); let c3r = c3i.build()
            var c4i = C4.DocumentInterpolation(c4); let c4r = c4i.build()
            var c5i = C5.DocumentInterpolation(c5); let c5r = c5i.build()
            return [c0r, c1r, c2r, c3r, c4r, c5r]
        }
    }
    public static func buildBlock<C0, C1, C2, C3, C4, C5, C6>(
    _ c0: C0, _ c1: C1, _ c2: C2, _ c3: C3, _ c4: C4, _ c5: C5, _ c6: C6
    ) -> TupleDocument<(C0, C1, C2, C3, C4, C5, C6)> where C0: TextDocument, C1: TextDocument, C2: TextDocument, C3: TextDocument, C4: TextDocument, C5: TextDocument, C6: TextDocument {
        TupleDocument {
            var c0i = C0.DocumentInterpolation(c0); let c0r = c0i.build()
            var c1i = C1.DocumentInterpolation(c1); let c1r = c1i.build()
            var c2i = C2.DocumentInterpolation(c2); let c2r = c2i.build()
            var c3i = C3.DocumentInterpolation(c3); let c3r = c3i.build()
            var c4i = C4.DocumentInterpolation(c4); let c4r = c4i.build()
            var c5i = C5.DocumentInterpolation(c5); let c5r = c5i.build()
            var c6i = C6.DocumentInterpolation(c6); let c6r = c6i.build()
            return [c0r, c1r, c2r, c3r, c4r, c5r, c6r]
        }
    }
    public static func buildBlock<C0, C1, C2, C3, C4, C5, C6, C7>(
    _ c0: C0, _ c1: C1, _ c2: C2, _ c3: C3, _ c4: C4, _ c5: C5, _ c6: C6, _ c7: C7
    ) -> TupleDocument<(C0, C1, C2, C3, C4, C5, C6, C7)> where C0: TextDocument, C1: TextDocument, C2: TextDocument, C3: TextDocument, C4: TextDocument, C5: TextDocument, C6: TextDocument, C7: TextDocument {
        TupleDocument {
            var c0i = C0.DocumentInterpolation(c0); let c0r = c0i.build()
            var c1i = C1.DocumentInterpolation(c1); let c1r = c1i.build()
            var c2i = C2.DocumentInterpolation(c2); let c2r = c2i.build()
            var c3i = C3.DocumentInterpolation(c3); let c3r = c3i.build()
            var c4i = C4.DocumentInterpolation(c4); let c4r = c4i.build()
            var c5i = C5.DocumentInterpolation(c5); let c5r = c5i.build()
            var c6i = C6.DocumentInterpolation(c6); let c6r = c6i.build()
            var c7i = C7.DocumentInterpolation(c7); let c7r = c7i.build()
            return [c0r, c1r, c2r, c3r, c4r, c5r, c6r, c7r]
        }
    }
    public static func buildBlock<C0, C1, C2, C3, C4, C5, C6, C7, C8>(
    _ c0: C0, _ c1: C1, _ c2: C2, _ c3: C3, _ c4: C4, _ c5: C5, _ c6: C6, _ c7: C7, _ c8: C8
    ) -> TupleDocument<(C0, C1, C2, C3, C4, C5, C6, C7, C8)> where C0: TextDocument, C1: TextDocument, C2: TextDocument, C3: TextDocument, C4: TextDocument, C5: TextDocument, C6: TextDocument, C7: TextDocument, C8: TextDocument {
        TupleDocument {
            var c0i = C0.DocumentInterpolation(c0); let c0r = c0i.build()
            var c1i = C1.DocumentInterpolation(c1); let c1r = c1i.build()
            var c2i = C2.DocumentInterpolation(c2); let c2r = c2i.build()
            var c3i = C3.DocumentInterpolation(c3); let c3r = c3i.build()
            var c4i = C4.DocumentInterpolation(c4); let c4r = c4i.build()
            var c5i = C5.DocumentInterpolation(c5); let c5r = c5i.build()
            var c6i = C6.DocumentInterpolation(c6); let c6r = c6i.build()
            var c7i = C7.DocumentInterpolation(c7); let c7r = c7i.build()
            var c8i = C8.DocumentInterpolation(c8); let c8r = c8i.build()
            return [c0r, c1r, c2r, c3r, c4r, c5r, c6r, c7r, c8r]
        }
    }
    public static func buildBlock<C0, C1, C2, C3, C4, C5, C6, C7, C8, C9>(
    _ c0: C0, _ c1: C1, _ c2: C2, _ c3: C3, _ c4: C4, _ c5: C5, _ c6: C6, _ c7: C7, _ c8: C8, _ c9: C9
    ) -> TupleDocument<(C0, C1, C2, C3, C4, C5, C6, C7, C8, C9)> where C0: TextDocument, C1: TextDocument, C2: TextDocument, C3: TextDocument, C4: TextDocument, C5: TextDocument, C6: TextDocument, C7: TextDocument, C8: TextDocument, C9: TextDocument {
        TupleDocument {
            var c0i = C0.DocumentInterpolation(c0); let c0r = c0i.build()
            var c1i = C1.DocumentInterpolation(c1); let c1r = c1i.build()
            var c2i = C2.DocumentInterpolation(c2); let c2r = c2i.build()
            var c3i = C3.DocumentInterpolation(c3); let c3r = c3i.build()
            var c4i = C4.DocumentInterpolation(c4); let c4r = c4i.build()
            var c5i = C5.DocumentInterpolation(c5); let c5r = c5i.build()
            var c6i = C6.DocumentInterpolation(c6); let c6r = c6i.build()
            var c7i = C7.DocumentInterpolation(c7); let c7r = c7i.build()
            var c8i = C8.DocumentInterpolation(c8); let c8r = c8i.build()
            var c9i = C9.DocumentInterpolation(c9); let c9r = c9i.build()
            return [c0r, c1r, c2r, c3r, c4r, c5r, c6r, c7r, c8r, c9r]
        }
    }
}
